<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_ini_viewer_init()

//Small Check - Do Not Change
editor_started=false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(fnt_hud)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>key_up = keyboard_check_pressed(vk_up)
key_down = keyboard_check_pressed(vk_down)
key_edit = keyboard_check_pressed(vk_enter)

if (key_up)
{
    sound_play(snd_switch_weapon);
    menuSelected -=1;
    if (menuSelected &lt; 1) { menuSelected = menuText[0]; }
}

if (key_down)
{
    sound_play(snd_switch_weapon);
    menuSelected +=1;
    if (menuSelected &gt; menuText[0]) { menuSelected = 1; }
}

if (key_edit)
{
    sound_play(snd_menu_select)
    switch(menuSelected) 
    {
        //wavedata
        case 1:
            ini_open("biorena_savedwavedata.ini")
            iniedit = get_string("Player Intial Health",string(ini_read_real("wavedata","health",200)))
            ini_write_string("wavedata","health",(string(iniedit)))
            ini_close()
            scr_ini_viewer_refresh()
        break;
        case 2:
            ini_open("biorena_savedwavedata.ini")
            iniedit = get_string("Bot Intial Health",string(ini_read_real("wavedata","health_bot",200)))
            ini_write_string("wavedata","health_bot",(string(iniedit)))
            ini_close()
            scr_ini_viewer_refresh()
        break;
        case 3:
            ini_open("biorena_savedwavedata.ini")
            iniedit = get_string("Wave",string(ini_read_real("wavedata","wave",1)))
            ini_write_string("wavedata","wave",(string(iniedit)))
            ini_close()
            scr_ini_viewer_refresh()
        break;
        case 4:
            ini_open("biorena_savedwavedata.ini")
            iniedit = get_string("Bohrok Count",string(ini_read_real("wavedata","bohrok",5)))
            ini_write_string("wavedata","bohrok",(string(iniedit)))
            ini_close()
            scr_ini_viewer_refresh()
        break;
        case 5:
            ini_open("biorena_savedwavedata.ini")
            iniedit = get_string("Infected Count",string(ini_read_real("wavedata","infected",4)))
            ini_write_string("wavedata","infected",(string(iniedit)))
            ini_close()
            scr_ini_viewer_refresh()
        break;
        case 6:
            ini_open("biorena_savedwavedata.ini")
            iniedit = get_string("Rahkshi Count",string(ini_read_real("wavedata","rahkshi",2)))
            ini_write_string("wavedata","rahkshi",(string(iniedit)))
            ini_close()
            scr_ini_viewer_refresh()
        break;
        case 7:
            ini_open("biorena_savedwavedata.ini")
            iniedit = get_string("Makuta Count",string(ini_read_real("wavedata","makuta",1)))
            ini_write_string("wavedata","makuta",(string(iniedit)))
            ini_close()
            scr_ini_viewer_refresh()
        break;
        case 8:
            ini_open("biorena_savedwavedata.ini")
            iniedit = get_string("Bohrok Spawner Count",string(ini_read_real("wavedata","bohrok_spawner",5)))
            ini_write_string("wavedata","bohrok_spawner",(string(iniedit)))
            ini_close()
            scr_ini_viewer_refresh()
        break;
        case 9:
            ini_open("biorena_savedwavedata.ini")
            iniedit = get_string("Infected Spawner Count",string(ini_read_real("wavedata","infected_spawner",4)))
            ini_write_string("wavedata","infected_spawner",(string(iniedit)))
            ini_close()
            scr_ini_viewer_refresh()
        break;
        case 10:
            ini_open("biorena_savedwavedata.ini")
            iniedit = get_string("Rahkshi Spawner Count",string(ini_read_real("wavedata","rahkshi_spawner",2)))
            ini_write_string("wavedata","rahkshi_spawner",(string(iniedit)))
            ini_close()
            scr_ini_viewer_refresh()
        break;
        case 11:
            ini_open("biorena_savedwavedata.ini")
            iniedit = get_string("Makuta Spawner Count",string(ini_read_real("wavedata","makuta_spawner",1)))
            ini_write_string("wavedata","makuta_spawner",(string(iniedit)))
            ini_close()
            scr_ini_viewer_refresh()
        break;
        case 12:
            ini_open("biorena_savedwavedata.ini")
            iniedit = get_string("Bosswave (0 = disabled, 1 = enabled)",string(ini_read_real("wavedata","bosswave",0)))
            ini_write_string("wavedata","bosswave",(string(iniedit)))
            ini_close()
            scr_ini_viewer_refresh()
        break;
        case 13:
            ini_open("biorena_savedwavedata.ini")
            iniedit = get_string("Wave Progress",string(ini_read_real("wavedata","boss_wavespawnprogress",1)))
            ini_write_string("wavedata","boss_wavespawnprogress",(string(iniedit)))
            ini_close()
            scr_ini_viewer_refresh()
        break;
        //wavemodding
        case 14:
            ini_open("biorena_savedwavedata.ini")
            iniedit = get_string("Modifying Enabled (0 = disabled, 1 = enabled)",string(ini_read_real("wavemodding","mod_enabled",0)))
            ini_write_string("wavemodding","mod_enabled",(string(iniedit)))
            ini_close()
            scr_ini_viewer_refresh()
        break;
        case 15:
            ini_open("biorena_savedwavedata.ini")
            iniedit = get_string("Bot Enabled (0 = disabled, 1 = enabled)",string(ini_read_real("wavemodding","spawn_bot",1)))
            ini_write_string("wavemodding","spawn_bot",(string(iniedit)))
            ini_close()
            scr_ini_viewer_refresh()
        break;
        case 16:
            ini_open("biorena_savedwavedata.ini")
            iniedit = get_string("Player Respawn Health",string(ini_read_real("wavemodding","mod_health",200)))
            ini_write_string("wavemodding","mod_health",(string(iniedit)))
            ini_close()
            scr_ini_viewer_refresh()
        break;
        case 17:
            ini_open("biorena_savedwavedata.ini")
            iniedit = get_string("Bot Respawn Health",string(ini_read_real("wavemodding","mod_health_bot",200)))
            ini_write_string("wavemodding","mod_health_bot",(string(iniedit)))
            ini_close()
            scr_ini_viewer_refresh()
        break;
        case 18:
            ini_open("biorena_savedwavedata.ini")
            iniedit = get_string("Bohrok Reset Value",string(ini_read_real("wavemodding","mod_bohrok_reset",5)))
            ini_write_string("wavemodding","mod_bohrok_reset",(string(iniedit)))
            ini_close()
            scr_ini_viewer_refresh()
        break;
        case 19:
            ini_open("biorena_savedwavedata.ini")
            iniedit = get_string("Infected Reset Value",string(ini_read_real("wavemodding","mod_infected_reset",4)))
            ini_write_string("wavemodding","mod_infected_reset",(string(iniedit)))
            ini_close()
            scr_ini_viewer_refresh()
        break;
        case 20:
            ini_open("biorena_savedwavedata.ini")
            iniedit = get_string("Rahkshi Reset Value",string(ini_read_real("wavemodding","mod_rahkshi_reset",2)))
            ini_write_string("wavemodding","mod_rahkshi_reset",(string(iniedit)))
            ini_close()
            scr_ini_viewer_refresh()
        break;
        case 21:
            ini_open("biorena_savedwavedata.ini")
            iniedit = get_string("Makuta Reset Value",string(ini_read_real("wavemodding","mod_makuta_reset",1)))
            ini_write_string("wavemodding","mod_makuta_reset",(string(iniedit)))
            ini_close()
            scr_ini_viewer_refresh()
        break;
        case 22:
            ini_open("biorena_savedwavedata.ini")
            iniedit = get_string("Wave Progress Limit",string(ini_read_real("wavemodding","mod_boss_spawnvalue",11)))
            ini_write_string("wavemodding","mod_boss_spawnvalue",(string(iniedit)))
            ini_close()
            scr_ini_viewer_refresh()
        break;
        case 23:
            ini_open("biorena_savedwavedata.ini")
            iniedit = get_string("Bosswave (No End) (0 = disabled, 1 = enabled)",string(ini_read_real("wavemodding","mod_bosswave",0)))
            ini_write_string("wavemodding","mod_bosswave",(string(iniedit)))
            ini_close()
            scr_ini_viewer_refresh()
        break;
        case 24:
            ini_open("biorena_savedwavedata.ini")
            iniedit = get_string("Ending Enabled (Use with Bosswave (No End)) (0 = disabled, 1 = enabled)",string(ini_read_real("wavemodding","mod_ending",0)))
            ini_write_string("wavemodding","mod_ending",(string(iniedit)))
            ini_close()
            scr_ini_viewer_refresh()
        break;
        case 25:
            ini_open("biorena_savedwavedata.ini")
            iniedit = get_string("Makuta Health",string(ini_read_real("wavemodding","mod_health_makuta",3500)))
            ini_write_string("wavemodding","mod_health_makuta",(string(iniedit)))
            ini_close()
            scr_ini_viewer_refresh()
        break;
        case 26:
            ini_open("biorena_savedwavedata.ini")
            iniedit = get_string("Pause Timer on Revive (0 = disabled, 1 = enabled)",string(ini_read_real("wavemodding","mod_revive_timerpause",0)))
            ini_write_string("wavemodding","mod_revive_timerpause",(string(iniedit)))
            ini_close()
            scr_ini_viewer_refresh()
        break;
        case 27:
            ini_open("biorena_savedwavedata.ini")
            iniedit = get_string("Revival Level",string(ini_read_real("wavemodding","mod_revive_revivallevel",35)))
            ini_write_string("wavemodding","mod_revive_revivallevel",(string(iniedit)))
            ini_close()
            scr_ini_viewer_refresh()
        break;
        case 28:
            ini_open("biorena_savedwavedata.ini")
            iniedit = get_string("Respawn Time (Bot)",string(ini_read_real("wavemodding","mod_respawntime_bot",150)))
            ini_write_string("wavemodding","mod_respawntime_bot",(string(iniedit)))
            ini_close()
            scr_ini_viewer_refresh()
        break;
        case 29:
            ini_open("biorena_savedwavedata.ini")
            iniedit = get_string("Respawn Time (Player)",string(ini_read_real("wavemodding","mod_respawntime_player",150)))
            ini_write_string("wavemodding","mod_respawntime_player",(string(iniedit)))
            ini_close()
            scr_ini_viewer_refresh()
        break;
        case 30:
            scr_ini_create_wavedata()
            scr_ini_viewer_refresh()
        break;
        case 31:
            if (show_question("Are you sure you want to exit the INI Editor? Your progress will be saved, but it will not be saved to a new INI file. The one the game loads will have your changes!"))
            {
                room = rm_mainmenu
            }
        break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//A check to make sure this only happens once.
if editor_started=true exit
editor_started=true
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_halign(fa_left)
draw_set_font(fnt_tools)

for (i = 1; i &lt;= menuText[0]; i+=1) {
    if (menuSelected = i) { draw_set_color(c_red); } else { draw_set_color(c_black); }
    draw_text(x,y+(i*13)-13,menuText[i]);
  }

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
