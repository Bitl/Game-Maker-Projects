<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sp_0</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// initialize variables
grav=2;
hsp=0;
vsp=0;
jumping=-20;
image_speed=.4
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// input
key_right = (keyboard_check(vk_right)) or (keyboard_check(ord('D')));
key_left = keyboard_check(vk_left)  or (keyboard_check(ord('A')));
crouch = keyboard_check(vk_down)  or (keyboard_check(ord('S')));
key_jump = keyboard_check_pressed(vk_up)  or (keyboard_check_pressed(ord('W')));


// vertical collision

if place_meeting(x,y+vsp,obj_wall)
    {
    while (!place_meeting(x,y+sign(vsp),obj_wall)) y+=sign(vsp);
        if (sign(vsp) ==1)
        {
        grounded = 1;
        }
        vsp =0;
}
else
{
grounded = 0;
}
y+= vsp;

// h collision

if place_meeting(x+hsp,y,obj_wall)
        {
        while (!place_meeting(x+sign(hsp),y,obj_wall)) x+=sign (hsp);
        hsp = 0;
        }
x+= hsp;
// Player

if key_left
    {
        hsp=-18
        image_xscale=1
    }
if key_right
    {
        hsp=18
        image_xscale=-1
    }
if (key_left &amp;&amp; key_right) or (!key_left &amp;&amp; !key_right)
    {
        hsp=0
    }
if key_jump &amp;&amp; grounded
    {
        vsp=jumping   
    }
vsp+=grav;
//animation
if grounded{
    if hsp ==0
    {   
        sprite_index = sp_0
    }else{ 
        if sprite_index!=sp_1 image_index=0
        sprite_index=sp_1   
     } 
}
if (vsp&lt;0)
    {
        sprite_index = sp_2
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>24,87</point>
    <point>44,44</point>
  </PhysicsShapePoints>
</object>
